version: '3'

services:
  load-balancer:
    build:
      context: .
      dockerfile: ./dockerfiles/DockerfileNginx
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - '9000:80'
      - '400:400'
    environment:
      - NGINX_PORT=80

  auth-server:
    build:
      context: .
      dockerfile: ./dockerfiles/DockerfileAuthServer
    volumes:
      - ./backend/authServer:/app
      - ./rabbitMQ/:/app/rabbitMQ
    ports:
      - '3000'
  api-server:
    build:
      context: .
      dockerfile: ./dockerfiles/DockerfileAPI
    volumes:
      - ./backend/API:/app
    ports:
      - '3001'
  mongo:
    build:
      context: .
      dockerfile: ./dockerfiles/DockerfileMongo
    restart: always
    volumes:
      - ./database/:/database/
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017

  rabbitmq:
    build:
      context: .
      dockerfile: ./dockerfiles/DockerfileRabbitMQ
    hostname: 'rabbitmq'
    environment:
      RABBITMQ_DEFAULT_USER: 'rabbitmq'
      RABBITMQ_DEFAULT_PASS: 'rabbitmq'
    ports:
      # The standard AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 20s
      timeout: 10s
      retries: 5

  email-server:
    links:
      - rabbitmq
    build:
      context: .
      dockerfile: ./dockerfiles/DockerfileEmail
